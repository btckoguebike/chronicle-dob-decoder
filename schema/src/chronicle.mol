vector UTF8Bytes <byte>;

vector TraitPool <UTF8Bytes>;
vector NumberPool <byte>;
table NumberRange {
    min: byte,
    max: byte,
}

union Instruction {
    NumberRange,
    TraitPool,
    UTF8Bytes,
}
vector InstructionVec <Instruction>;
vector TemplatePool <InstructionVec>;

union Pool {
    TraitPool,
    NumberPool,
    NumberRange,
    TemplatePool,
}

table Segment {
    segment_bytes: byte,
    pool: Pool,
}

vector SegmentVec <Segment>;

table VariableSegment {
    count: Segment,
    segments: SegmentVec,
}

vector VariableSegmentVec <VariableSegment>;

union Pattern {
    Segment,
    VariableSegment,
    VariableSegmentVec,
}

table PlayerSchema {
    adjective: Pattern,
    name: Pattern,
    profession: Pattern,
    power: Pattern,
    gold: Pattern,
    card: Pattern,
}

table SceneSchema {
    name: Pattern,
    attribute: Pattern,
    operation: Pattern,
    difficulty: Pattern,
    score: Pattern,
    commodity: Pattern,
}

table ContextSchema {
    adjective: Pattern,
    era: Pattern,
    time: Pattern,
    mode: Pattern,
    rank: Pattern,
    effect: Pattern,
}

table EventSchema {
    player: Pattern,
    scene: Pattern,
    context: Pattern,
    transition: Pattern,
    climax: Pattern,
    ending: Pattern,
}

table AshWarChronicle {
    player: PlayerSchema,
    scene: SceneSchema,
    context: ContextSchema,
    event: EventSchema,
}
